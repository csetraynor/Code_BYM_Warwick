warning('input variate not character - return original')
return(x)
} else {
ifelse(x == '', NA, x)
}
}
glio_clin_dat <- glio_clin_dat %>%
dplyr::mutate_all(funs(convert_blank_to_na))
glio_clin_dat %>%
VIM::aggr(prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)
#filter unknown or negative survival times (os_monts < 0)
glio_clin_dat %>%
filter(is.na(os_status) | os_status != '') %>%
filter(os_months <= 0 | is.na(os_months)) %>%
dplyr::select(os_status, os_months) %>%
dplyr::glimpse()
#for now this observation will be remove from the analysis
glio_short_dat <- glio_clin_dat %>%
filter(!is.na(os_status) & os_status != '') %>%
filter(os_months > 0 & !is.na(os_months))
#Check 44 fewer obsrvations than original if working with dfs
assertthat::assert_that(nrow(glio_short_dat) == nrow(glio_clin_dat) - 44)
glio_clin_dat <- glio_short_dat
remove(glio_short_dat)
#Prepare clinical covariates, just for now we will drop the remaining missing values
glio_clin_dat <- glio_clin_dat %>%
#filter(!is.na( mgmt_status)) %>%
mutate(age_centered = scale(age),  #scaling age because is a continuos covariate
g.cimp_or_idh1_r = (I(g.cimp_methylation == "G-CIMP" |
(is.na(g.cimp_methylation) &
idh1_status != "WT" )) |
I(idh1_status != "WT" |
(is.na(idh1_status) &
g.cimp_methylation == "G-CIMP"))))
glio_clin_dat %>% filter(is.na(g.cimp_or_idh1_r)) %>% dplyr::select(g.cimp_or_idh1_r)
#Prepare clinical covariates, just for now we will drop the remaining missing values
glio_clin_dat <- glio_clin_dat %>%
#filter(!is.na( mgmt_status)) %>%
mutate(age_centered = scale(age),  #scaling age because is a continuos covariate
g.cimp_or_idh1_r = (I(g.cimp_methylation == "G-CIMP") |
I(is.na(g.cimp_methylation) &
idh1_status != "WT" ) |
I(idh1_status != "WT") |
I(is.na(idh1_status) &
g.cimp_methylation == "G-CIMP")))
glio_clin_dat %>% filter(is.na(g.cimp_or_idh1_r)) %>% dplyr::select(g.cimp_or_idh1_r)
#Prepare clinical covariates, just for now we will drop the remaining missing values
glio_clin_dat <- glio_clin_dat %>%
#filter(!is.na( mgmt_status)) %>%
mutate(age_centered = scale(age),  #scaling age because is a continuos covariate
g.cimp_or_idh1_r = (I(g.cimp_methylation == "G-CIMP")
I(idh1_status != "WT")))
#Prepare clinical covariates, just for now we will drop the remaining missing values
glio_clin_dat <- glio_clin_dat %>%
#filter(!is.na( mgmt_status)) %>%
mutate(age_centered = scale(age),  #scaling age because is a continuos covariate
g.cimp_or_idh1_r = (I(g.cimp_methylation == "G-CIMP") |
I(idh1_status != "WT")))
glio_clin_dat %>% filter(is.na(g.cimp_or_idh1_r)) %>% dplyr::select(g.cimp_or_idh1_r)
## impute idh1_status based on g.cimp
table(glio_clin_dat$g.cimp_methylation, glio_clin_dat$idh1_status, useNA = "always")
skewness(glio_clin_dat$age)
library(lattice)
histogram(glio_clin_dat$age)
boxcox(glio_clin_dat$age)
BoxCoxTrans(glio_clin_dat$age)
BoxCoxTrans(glio_clin_dat$age_centered)
skewness(glio_clin_dat$age_centered)
histogram(glio_clin_dat$age_centered)
X <- glio_clin_dat %>%
dplyr::select(age, g.cimp_methylation, idh1_status, mgmt_status)
?preProcess
caret::preProcess(X, method = c("center", "scale", "bagImpute"))
summary(X)
## impute idh1_status based on g.cimp
table(glio_clin_dat$g.cimp_methylation, glio_clin_dat$idh1_status, useNA = "always")
X <- caret::preProcess(X, method = c("center", "scale", "bagImpute"))
## impute idh1_status based on g.cimp
table(glio_clin_dat$g.cimp_methylation, glio_clin_dat$idh1_status, useNA = "always")
## impute idh1_status based on g.cimp
table(X$g.cimp_methylation, X$idh1_status, useNA = "always")
summary(X)
X <- glio_clin_dat %>%
dplyr::select(age, g.cimp_methylation, idh1_status, mgmt_status)
caret::preProcess(X, method = c("center", "scale", "bagImpute"))
## impute idh1_status based on g.cimp
table(X$g.cimp_methylation, X$idh1_status, useNA = "always")
?preProcess
preProc <- caret::preProcess(X, method = c("center", "scale", "bagImpute"))
preProc
X <- predict(preProc, X)
## impute idh1_status based on g.cimp
table(X$g.cimp_methylation, X$idh1_status, useNA = "always")
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X)
preProc <- caret::preProcess(X, method = c("bagImpute"), na.action = na.pass)
X <- predict(preProc, X)
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X , na.action = na.pass)
preProc
Xdummies <- dummyVars(X)
Xdummies <- dummyVars(data = X)
Xdummies <- dummyVars(Surv(os_months, os_deceased) ~ age +
g.cimp_methylation + idh1_status +
mgmt_statusdata, data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
Xdummies <- dummyVars(Surv(os_months, os_deceased) ~ age +
g.cimp_methylation + idh1_status +
mgmt_status, data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
Xdummies
head(predict(Xdummies, newdata = data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
head(predict(Xdummies, newdata = data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
head(predict(Xdummies, newdata = data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
head(predict(Xdummies, newdata = data =  glio_clin_dat %>%
head(predict(Xdummies, newdata = data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
head(predict(Xdummies, newdata = data =  glio_clin_dat))
head(predict(Xdummies, newdata =  glio_clin_dat))
head(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
X <- head(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
preProc <- caret::preProcess(X, method = c("bagImpute"))
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
preProc <- caret::preProcess(X, method = c("bagImpute"))
names(X) <- tolower(names(X))
preProc <- caret::preProcess(X, method = c("bagImpute"))
names(X)
X <- predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X) <- tolower(names(X))
names(X)
preProc <- caret::preProcess(X, method = c("bagImpute"))
keeps <- c("-", "_", ".")
strip(names(X), keeps, lower = TRUE)
library(qdap)
install.packages(qdap)
install.packages("qdap")
install.packages("qdap", dependencies = TRUE)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
str_replace_all(names(X), "-", " ")
library(stringr)
stringr::str_replace_all(names(X), "-", " ")
names(X)<- stringr::str_replace_all(names(X), "-", " ")
names(X) <- tolower(names(X))
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X , na.action = na.pass)
summary(X)
unique(X$mgmt_statusmethylated)
unique(X$mgmt_statusunmethylated)
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
unique(X$mgmt_statusunmethylated)
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
unique(X$mgmt_statusunmethylated)
unique(X$mgmt_statusmethylated)
head(X)
preProc <- caret::preProcess(X[2:9], method = c("bagImpute"))
X <- predict(preProc, X[2:9])
X <- predict(preProc, X[2:9] , na.action = na.pass)
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
X <- predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
preProc <- caret::preProcess(X[,2:9], method = c("bagImpute"))
X <- predict(preProc, X[,2:9] , na.action = na.pass)
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X, na.action = na.pass)
summary(X)
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X, na.action = na.pass)
summary(X)
unique(X$mgmt_statusmethylated)
X$g.cimp_methylationgcimp
X$idh1_statusr132c
X$idh1_statuswt
?round
X[2:9] <- round(X[2:9])
X$idh1_statusr132g
sum(X$idh1_statuswt)
## impute idh1_status based on g.cimp
table(X$g.cimp_methylation, X$idh1_status, useNA = "always")
table(glio_clin_dat$mgmt_status, useNA = "always" )
table(glio_clin_dat$g.cimp_methylation, glio_clin_dat$idh1_status, useNA = "always")
377+6
383+111
494+8
sum(X$idh1_statusr132h)
sum(X$g.cimp_methylationgcimp)
28+6+1+1+6
sum(X$g.cimp_methylationnongcimp)
377+111+8+3
X[-1] <- round(X[-1])
table(glio_clin_dat$mgmt_status, useNA = "always" )
sum(X$mgmt_statusmethylated)
sum(X$mgmt_statusunmethylated)
?round
round(4.5)
round(4.51)
round(4.41)
?preProcess
preProc <- caret::preProcess(X[1], method = c("center", "scale"))
X[1] <- predict(preProc, X)
X[1] <- predict(preProc, X[1])
Xdummies <- dummyVars(Surv(os_months, os_deceased) ~ age +
g.cimp_methylation + idh1_status +
mgmt_status, data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
#impute using caret package and method bagImpute
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X, na.action = na.pass)
X[-1] <- round(X[-1])
preProc <- caret::preProcess(X[1], method = c("center", "scale"))
X[1] <- predict(preProc, X[1])
BoxCoxTrans(X[1])
BoxCoxTrans(X[,1])
BoxCoxTrans(X$age)
Xdummies <- dummyVars(Surv(os_months, os_deceased) ~ age +
g.cimp_methylation + idh1_status +
mgmt_status, data =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED")))
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
#impute using caret package and method bagImpute
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X, na.action = na.pass)
X[-1] <- round(X[-1])
BoxCoxTrans(X$age)
preProc <- caret::preProcess(X[1], method = c("center", "scale"))
X[1] <- predict(preProc, X[1])
BoxCoxTrans(X$age)
histogram(X)
histogram(X$age)
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,][1:10,]
nzv[nzv$nzv,]
X <- X %>% mutate(g.cimp_or_idh1_r = g.cimp_methylationgcimp | !idh1_statuswt)
sum(X$g.cimp_or_idh1_r)
sum(X$g.cimp_methylationgcimp)
sum(X$g.cimp_methylationgcimp)
sum(!(X$idh1_statuswt))
table(X$g.cimp_methylation, X$idh1_status, useNA = "always")
table(glio_clin_dat$g.cimp_methylation, glio_clin_dat$idh1_status, useNA = "always")
names(X)
X <- X %>% mutate(g.cimp_or_idh1_r = (g.cimp_methylationgcimp | !idh1_statuswt)) %>% dplyr::select(age, g.cimp_or_idh1_r, mgmt_statusmethylated)
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
X <- X %>% mutate(g.noncimp_or_idh1_wt = (g.cimp_methylationnongcimp | idh1_statuswt) %>% dplyr::select(age, g.noncimp_or_idh1_wt, mgmt_statusmethylated))
X <- X %>% mutate(g.noncimp_or_idh1_wt = (g.cimp_methylationnongcimp | idh1_statuswt) %>% dplyr::select(age, g.noncimp_or_idh1_wt, mgmt_statusmethylated))
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
#impute using caret package and method bagImpute
preProc <- caret::preProcess(X, method = c("bagImpute"))
X <- predict(preProc, X, na.action = na.pass)
X[-1] <- round(X[-1])
#standardise continuos covariates such as age
preProc <- caret::preProcess(X[1], method = c("center", "scale"))
X[1] <- predict(preProc, X[1])
histogram(X$age)
#Near Zero Variance Predictors
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
X <- X %>% mutate(g.noncimp_or_idh1_wt = (g.cimp_methylationnongcimp | idh1_statuswt) %>% dplyr::select(age, g.noncimp_or_idh1_wt, mgmt_statusmethylated))
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
X <- X %>% mutate(g.noncimp_or_idh1_wt = (g.cimp_methylationnongcimp | idh1_statuswt)) %>% dplyr::select(age, g.noncimp_or_idh1_wt, mgmt_statusmethylated)
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
table(glio_clin_dat$g.cimp_methylation, glio_clin_dat$idh1_status, useNA = "always")
View(glio_clin_dat)
X <- tbl_df(predict(Xdummies, newdata =  glio_clin_dat %>%
mutate(os_deceased = (os_status == "DECEASED"))))
names(X)<- stringr::str_replace_all(names(X), "-", "")
names(X) <- tolower(names(X))
sum(is.na(X$age))
#impute using caret package method bagged trees. For each predictor in the data, a bagged tree is created using all of the other predictors in the training set. When a new sample has a missing predictor value, the bagged model is used to predict the value.
preProc <- caret::preProcess(X[-1], method = c("bagImpute"))
X[-1] <- predict(preProc, X[-1], na.action = na.pass)
X[,-1] <- predict(preProc, X[-1], na.action = na.pass)
#impute using caret package method bagged trees. For each predictor in the data, a bagged tree is created using all of the other predictors in the training set. When a new sample has a missing predictor value, the bagged model is used to predict the value.
preProc <- caret::preProcess(X[-1], method = c("bagImpute"))
X[,-1] <- predict(preProc, X[-1], na.action = na.pass)
unique(X$mgmt_statusmethylated)
unique(X$idh1_statuswt)
sum(x$mgmt_statusmethylated == 0.5)
sum(X$mgmt_statusmethylated == 0.5)
sum(X$mgmt_statusunmethylated == 0.5)
unique(X$mgmt_statusunmethylated)
round(0.5)
X[-1] <- round(X[-1])
#standardise continuos covariates such as age
preProc <- caret::preProcess(X[1], method = c("center", "scale"))
X[1] <- predict(preProc, X[1])
histogram(X$age)
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
#Prepare clinical covariates and  ensemble covariates
X <- X %>% mutate(g.noncimp_or_idh1_wt = (g.cimp_methylationnongcimp | idh1_statuswt)) %>% dplyr::select(age, g.noncimp_or_idh1_wt, mgmt_statusmethylated)
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
nzv <- caret::nearZeroVar(X, saveMetrics= TRUE)
nzv[nzv$nzv,]
install.packages("doMC")
registerDoMC(cores = 5)
library(doMC)
registerDoMC(cores = 5)
trainingRows <- caret::createFolds(glio_clin_dat$os_status,
k = 10,
list = TRUE)
trainingRows
?pmap
?mapply(function, ...)
?map
?pam
folds <- caret::createFolds(glio_clin_dat$os_status,
k = 10,
list = TRUE)
str(folds)
Trainfolds <- caret::createFolds(glio_clin_dat$os_status,
k = 10,
list = TRUE)
str(folds)
folds <- caret::createFolds(glio_clin_dat$os_status,
k = 10,
list = TRUE)
str(folds)
split_up <- lapply(folds, function(ind, dat) dat[ind,], dat = X)
unlist(lapply(split_up, nrow))
for( i in 1:10){
data <- split_up[i]
mean(data$age)
}
for( i in 1:10){
data <- split_up[[i]]
mean(data$age)
}
for( i in 1:10){
data <- split_up[[i]]
print(mean(data$age))
}
for( i in 1:K){
train_data <- do.call(rbind, split_up[[-i]])
test_data <- split_up[[i]]
print(mean(train_data$age))
}
################################################################
## create data partition
K = 10
for( i in 1:K){
train_data <- do.call(rbind, split_up[[-i]])
test_data <- split_up[[i]]
print(mean(train_data$age))
}
split_up[[-1]]
split_up[[1]]
split_up[[-1]]
unlist(lapply(split_up, nrow))
unlist(lapply(split_up))
unlist(lapply(split_up[[i:K]]), nrow )
unlist(lapply(split_up[[3]]), nrow )
unlist(lapply(split_up), nrow )
unlist(lapply(split_up, nrow))
unlist(lapply(split_up[[-1]], nrow))
unlist(lapply(split_up[[1]], nrow))
split_up[c(-1)]
do.call(rbind, split_up[c(-1)])
for( i in 1:K){
train_data <- do.call(rbind, split_up[c(-i)])
test_data <- split_up[[i]]
print(mean(train_data$age))
}
data <- glio_clin_dat %>%
dplyr::select(os_status, os_months, sample_id)
data <- glio_clin_dat %>%
dplyr::select(os_status, os_months, sample_id) %>%
cbind(X)
split_up <- lapply(folds, function(ind, dat) dat[ind,], dat = data)
unlist(lapply(split_up, nrow))
for( i in 1:K){
train_data <- do.call(rbind, split_up[c(-i)])
test_data <- split_up[[i]]
print(mean(train_data$age))
}
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(~ Surv(os_months, os_deceased) ~ 1, data = .) %>%
map(fortify)
library(dplyr)
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(~ Surv(os_months, os_deceased) ~ 1, data = .) %>%
map(fortify)
library(purrr)
library(httr)
library(readr)
library(survival)
library(rstan)
library(spBayesSurv)
library(pracma)
library(assertthat)
library(cgdsr)
suppressMessages(library(dplyr))
library(ggplot2)
require(ggfortify)
theme_set(theme_bw())
library(VIM)
library(scales)
library(caret)
library(ipred)
library(e1071)
library(MASS)
library(lattice)
library(impute)
library(qdap)
library(doMC)
registerDoMC(cores = 5)
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(~ Surv(os_months, os_deceased) ~ 1, data = .) %>%
map(fortify)
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(Surv(os_months, os_deceased) ~ 1, data = .) %>%
map(fortify)
?Surv
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(Surv(os_months, os_deceased), data = .) %>%
map(fortify)
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(Surv(os_months, os_deceased), data = .)
?lapply
lapply(  pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')),
Surv(os_months, os_deceased))
lapply( pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')),
with(data = ., Surv(os_months, os_deceased)))
with(pp_newdata, Surv(os_months, os_status))
with(pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')),
Surv(os_months, os_status))
pp_smod <- with(pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')),
Surv(os_months, os_status))
pp_smod <- lapply(pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')), function(x){
with(x, Surv(os_months, os_status))
})
pp_smod <- lapply(pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')), function(x){
with(x, Surv(os_months, os_deceased))
})
pp_survdata <-
pp_newdata %>%
map(~ mutate(., os_deceased = os_status == 'DECEASED')) %>%
map(~ survfit(Surv(os_months, os_deceased) ~ 1, data = .)) %>%
map(fortify)
pp_survdata <- lapply(pp_smod, function(x){
survfit(x) ~ 1
})
pp_survdata <- lapply(pp_smod, function(x){
survival::survfit(x ~ 1)
})
?map2
?sbrier
pp_newdata <- purrr::map2(.x = pp_smod,
.y = pp_survdata,
.f = ~ipred::sbrier(obj = .x,
pred = .y))
max(pp_survdata[[1]]$time)
min(pp_survdata[[1]]$time)
