{
    "collab_server" : "",
    "contents" : "#----Load libraries---#\n\nlibrary(purrr)\nlibrary(httr)\nlibrary(readr)\nlibrary(survival)\nlibrary(rstan)\nlibrary(spBayesSurv)\nlibrary(pracma)\nlibrary(assertthat)\nlibrary(cgdsr)\nsuppressMessages(library(dplyr))\nlibrary(ggplot2)\nrequire(ggfortify)\ntheme_set(theme_bw())\nlibrary(VIM)\nlibrary(scales)\n###############################################\n#Data obtantion\n#get data from with MSKCC package \n\nmycgds = CGDS(\"http://www.cbioportal.org/public-portal/\")\n\nglioblastome_2013_id_sutdy = getCancerStudies(mycgds)[55,1]\nglioblastome_2013_case_list = getCaseLists(mycgds, glioblastome_2013_id_sutdy)[2,1]\nglioblastome_2013_clinical_data <-  getClinicalData(mycgds, glioblastome_2013_case_list)\n\nglioblastome_2008_id_sutdy = getCancerStudies(mycgds)[56,1]\nglioblastome_2008_case_list = getCaseLists(mycgds, glioblastome_2008_id_sutdy)[2,1]\nglioblastome_2008_clinical_data <-  getClinicalData(mycgds, glioblastome_2008_case_list)\n\n#inspect dataframes\nglimpse(glioblastome_2013_clinical_data)\nglimpse(glioblastome_2008_clinical_data)\n\nglioblastome_2013_clinical_data <- glioblastome_2013_clinical_data %>% tibble::rownames_to_column(\"sample_id\"); glioblastome_2008_clinical_data <- glioblastome_2008_clinical_data %>% tibble::rownames_to_column(\"sample_id\") \n\nglio_clin_dat <- glioblastome_2013_clinical_data %>%\n  filter(!(sample_id %in%  glioblastome_2008_clinical_data$sample_id ))\n\n\n\n####################################################################\n#Data Cleaning\n\n#convert to lower case\nnames(glio_clin_dat) <- tolower(names(glio_clin_dat)) \n\n#convert missig values\nconvert_blank_to_na <- function(x) {\n  if(!purrr::is_character(x)){\n    warning('input variate not character - return original')\n    return(x)\n  } else {\n    ifelse(x == '', NA, x)\n  }\n}\nglio_clin_dat <- glio_clin_dat %>%\n  dplyr::mutate_all(funs(convert_blank_to_na))\n\n#inspect resulting dataframe\nglimpse(glio_clin_dat)\n\n######################################################################\n#Data Exploration\n#Considering overall survival#\n\nglio_clin_dat %>%\n  VIM::aggr(prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)\n\n#filter unknown or negative survival times (os_monts < 0)\n\nglio_clin_dat %>%\n  filter(is.na(os_status) | os_status != '') %>%\n  filter(os_months <= 0 | is.na(os_months)) %>%\n  select(os_status, os_months) %>%\n  dplyr::glimpse()\n\n#for now this observation will be remove from the analysis\n\nglio_short_dat <- glio_clin_dat %>%\n  filter(!is.na(os_status) & os_status != '') %>%\n  filter(os_months > 0 & !is.na(os_months))\n\n#Check 44 fewer obsrvations than original if working with dfs\nassertthat::assert_that(nrow(glio_short_dat) == nrow(glio_clin_dat) - 44)\nglio_clin_dat <- glio_short_dat\n\nglio_clin_dat %>%\n  VIM::aggr(prop = FALSE, combined = TRUE, numbers = TRUE, sortVars = TRUE, sortCombs = TRUE)\n\n########## Distribution of event times  ######################\n\nglio_clin_dat %>%\n  ggplot(aes(x = os_months,\n             group = os_status,\n             colour = os_status,\n             fill = os_status)) +\n  geom_density(alpha = 0.5)\n\n#KM curve\n\nmle.surv <- survfit(Surv(os_months, os_deceased) ~ 1,\n                    data = glio_clin_dat %>%\n                      mutate(os_deceased = (os_status == \"DECEASED\")))\nggplot2::autoplot(mle.surv, conf.int = F) +\n  ggtitle('KM survival for GGM 2013 Cohort')\n\n\n\n############ Parametric Survival Model #####################\n\ngen_stan_data <- function(data, formula = as.formula(~ 1)) {\n  \n  if (!inherits(formula, 'formula'))\n    formula <- as.formula(formula)\n  \n  observed_data <- data %>%\n    dplyr::filter(os_status == 'DECEASED')\n  \n  censored_data <- data %>%\n    dplyr::filter(os_status != 'DECEASED')\n  \n  Xobs_bg <- observed_data %>%\n    model.matrix(formula, data = .)\n  \n  Xcen_bg <- censored_data %>% \n    model.matrix(formula, data = . )\n  \n  assertthat::assert_that(ncol(Xcen_bg) == ncol(Xobs_bg))\n  M <- ncol(Xcen_bg)\n  \n  if (M > 1) {\n    if (\"(Intercept)\" %in% colnames(Xobs_bg))\n      Xobs_bg <- array(Xobs_bg[,-1], dim = c(nrow(observed_data), M - 1))\n    if (\"(Intercept)\" %in% colnames(Xcen_bg))\n      Xcen_bg <- array(Xcen_bg[,-1], dim = c(nrow(censored_data), M - 1))\n    assertthat::assert_that(ncol(Xcen_bg) == ncol(Xobs_bg))\n    M <- ncol(Xcen_bg)\n  }\n  \n  stan_data <- list(\n    Nobs = nrow(observed_data),\n    Ncen = nrow(censored_data),\n    yobs = observed_data$os_months,\n    ycen = censored_data$os_months,\n    M = M,\n    Xcen_bg = array(Xcen_bg, dim = c(nrow(censored_data), M)),\n    Xobs_bg = array(Xobs_bg, dim = c(nrow(observed_data), M))\n  )\n}\n\n\n##update initial values\nload(\"historic_cohort.Rdata\")\ngen_inits <- function(M) {\n  function()\n    list(\n      alpha_raw = 0.01*rnorm(1),\n      mu = rnorm(n = 1, mean = hist_cohort$mean_mu, sd = hist_cohort$sd_mu),\n      tau_s_bg_raw = 0.1*abs(rnorm(1)),\n      tau_bg_raw = array(abs(rnorm(M)), dim = c(M)),\n      beta_bg_raw = array(rnorm(M), dim = c(M))\n    )\n}\n\n\n##Prepare for fit Clinical Model\n\nstandardise <- function(x) {\n  x <- (x-mean(x)) / sd(x) \nreturn(x)\n}\n\nglio_clin_dat <- glio_clin_dat %>%\n  filter(!is.na(g.cimp_methylation) & !is.na( mgmt_status)) %>%\n  mutate(age_centered = standardise(age))\n\n\n##Run Stan\nstan_file <- \"Weibull.stan\"\n#open stan file\nif (interactive())\n  file.edit(stanfile)\ntestfit <- rstan::stan(stan_file,\n                        data = gen_stan_data(glio_clin_dat, '~ age_centered + \n                                                              I(g.cimp_methylation==\"G-CIMP\")+ \n                                                              I( mgmt_status==\"METHYLATED\") '),\n                        init = gen_inits(M = 3),\n                        iter = 4,\n                        chains = 1\n)\nnChain <- 4\nwei_fullfit <- rstan::stan(stan_file,\n                        data = gen_stan_data(glio_clin_dat, '~ age_centered + \n                                                              I(g.cimp_methylation==\"G-CIMP\")+ \n                                             I(mgmt_status==\"METHYLATED\") '),\n                        cores = min(nChain, parallel::detectCores()),\n                        seed = 7327,\n                        chains = nChain,\n                        iter = 2000,\n                        init = gen_inits(M = 3),\n                        control = list(adapt_delta = 0.99, max_treedepth = 10)\n)\n\n\n\n",
    "created" : 1518709683693.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3309803875",
    "id" : "D95A6340",
    "lastKnownWriteTime" : 1518718936,
    "last_content_update" : 1518718936631,
    "path" : "C:/RFactory/Code_BYM_Warwick/Weibull_clinical.R",
    "project_path" : "Weibull_clinical.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}